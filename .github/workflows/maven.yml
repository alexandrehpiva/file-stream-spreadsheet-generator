# Workflow CI/CD para Spreadsheet Generator
# Build tool: Maven | Java 24 | Spring Boot 3.4.4 | PostgreSQL

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  JAVA_VERSION: '24'
  MAVEN_OPTS: -Xmx2g
  SPRING_PROFILES_ACTIVE: test

jobs:
  test:
    name: Tests & Quality
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: spreadsheet_generator_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Setup JDK 24
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'oracle'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Verificar Java version
      run: java -version
      
    - name: Executar testes unitários
      run: ./mvnw test
      env:
        DATABASE_URL: jdbc:postgresql://localhost:5432/spreadsheet_generator_test
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: postgres
        
    - name: Executar testes de integração
      run: ./mvnw verify
      env:
        DATABASE_URL: jdbc:postgresql://localhost:5432/spreadsheet_generator_test
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: postgres
        
    - name: Gerar relatório de cobertura
      run: ./mvnw jacoco:report
      
    - name: Verificar limites de cobertura
      run: ./mvnw jacoco:check
      
    - name: Upload relatório de cobertura para Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./target/site/jacoco/jacoco.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Comentar PR com cobertura
      if: github.event_name == 'pull_request'
      uses: madrapps/jacoco-report@v1.6.1
      with:
        paths: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 80
        min-coverage-changed-files: 70
        title: '📊 Relatório de Cobertura'
        
  build:
    name: Build & Package
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Setup JDK 24
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'oracle'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build aplicação
      run: ./mvnw clean package -DskipTests
      
    - name: Upload artefatos
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifact
        path: target/*.jar
        retention-days: 7
        
    - name: Extrair metadados do JAR
      id: jar-info
      run: |
        JAR_FILE=$(ls target/*.jar | grep -v sources | grep -v javadoc | head -1)
        echo "jar-file=${JAR_FILE}" >> $GITHUB_OUTPUT
        echo "jar-size=$(stat -c%s ${JAR_FILE} | numfmt --to=iec)" >> $GITHUB_OUTPUT
        
    - name: Comentar PR com info do build
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `🚀 **Build concluído com sucesso!**
            
            📦 **JAR gerado**: \`${{ steps.jar-info.outputs.jar-file }}\`
            📏 **Tamanho**: ${{ steps.jar-info.outputs.jar-size }}
            ☕ **Java**: ${{ env.JAVA_VERSION }}
            🔧 **Maven**: $(./mvnw -version | head -1)
            
            ✅ Todos os testes passaram e limites de cobertura foram respeitados.`
          })

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Setup JDK 24
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'oracle'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Verificar vulnerabilidades
      run: ./mvnw org.owasp:dependency-check-maven:check
      continue-on-error: true
      
    - name: Upload relatório de segurança
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report
        path: target/dependency-check-report.html
        retention-days: 30

  dependency-submission:
    name: Dependency Graph
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Setup JDK 24
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'oracle'
        
    - name: Submit dependency graph
      uses: advanced-security/maven-dependency-submission-action@v4
      with:
        directory: .
        token: ${{ secrets.GITHUB_TOKEN }}
